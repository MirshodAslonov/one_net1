<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add New Client</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
    <style>
        /* Image upload box style (elongated like laptop screen) */
        #fileDropArea {
            position: relative;
            cursor: pointer;
            width: 250px; /* Wider than tall */
            height: 120px; /* Smaller height */
            border: 2px dashed rgb(177, 177, 177);
            border-radius: 8px;
            padding: 15px;
            text-align: center;
            background-color: #e0e0e0; /* Gray background */
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px;
        }

        /* Hover effect for file drop area */
        #fileDropArea:hover {
            background-color: #00f8e8;
            border-color: #004058;
            box-shadow: 0 4px 10px rgba(0, 123, 255, 0.2);
        }

        /* Plus icon and styling */
        #fileDropArea i {
            font-size: 25px; /* Larger icon size */
            color: #6c6a6a;
        }

        /* Previews for uploaded images (elongated shape) */
        #image-preview {
            display: flex;
            gap: 15px;
            flex-wrap: wrap;
            margin-top: 20px;
        }

        #image-preview img {
            width: 250px; /* Same width as the upload box */
            height: 120px; /* Same height as the upload box */
            object-fit: cover;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            cursor: pointer;
        }

        /* Full-size image modal */
        .modal-content {
            background-color: #f8f9fa;
            border-radius: 0;
            border: none;
            height: 100%;
        }

        .modal-body {
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 0;
            height: 100%;
        }

        .modal-body img {
            max-width: 90vw;
            max-height: 90vh;
            object-fit: contain;
            margin: 0 auto;
            display: block;
        }
        #image-preview button {
            border-radius: 50%;
            width: 25px;
            height: 25px;
            display: flex;
            justify-content: center;
            align-items: center;
        }
    </style>
</head>
<body>
<div class="container-fluid mt-5">
    <div class="row">
        <div class="col-12">
            <div class="card shadow-lg border-0">
                <div class="card-header bg-gradient-primary text-white py-3">
                    <h3 class="mb-0 text-center">Add New Client</h3>
                    <p class="text-light text-center">Fill in the details below to add a new client.</p>
                </div>
                <div class="card-body p-5">
                    <form action="{{ route('addClient') }}" method="POST" enctype="multipart/form-data" id="clientForm">
                        @csrf

                        <div class="row">
                            <!-- Client Name -->
                            <div class="col-md-6 mb-4">
                                <label for="client_name" class="form-label">Client Name</label>
                                <input type="text" id="client_name" name="client_name" class="form-control" placeholder="Enter client name" required>
                            </div>

                            <!-- Phone Number -->
                            <div class="col-md-6 mb-4">
                                <label for="number" class="form-label">Phone Number</label>
                                <input type="text" id="number" name="number" class="form-control" placeholder="Enter phone number" required>
                            </div>
                        </div>

                        <div class="row">
                            <!-- Comment -->
                            <div class="col-md-6 mb-4">
                                <label for="comment" class="form-label">Comment</label>
                                <textarea id="comment" name="comment" rows="3" class="form-control" placeholder="Enter comment"></textarea>
                            </div>

                            <!-- Branch -->
                            <div class="col-md-3 mb-4">
                                <label for="branch_id" class="form-label">Branch</label>
                                <select id="branch_id" name="branch_id" class="form-select" required>
                                    <option value="" selected disabled>Choose a branch</option>
                                    <option value="1">Toshkent</option>
                                    <option value="2">Buxoro</option>
                                </select>
                            </div>

                            <!-- Organization -->
                            <div class="col-md-3 mb-4">
                                <label for="organ_id" class="form-label">Organization</label>
                                <select id="organ_id" name="organ_id" class="form-select" required>
                                    <option value="" selected disabled>Choose an organization</option>
                                    <option value="1">Org 1</option>
                                    <option value="2">Org 2</option>
                                </select>
                            </div>
                        </div>

                        <!-- File Upload Section -->
                        <div class="mb-4">
                            <label for="file" class="form-label d-block">Upload Files (Max 3)</label>
                            <div id="fileDropArea" class="border-dashed text-center p-5 rounded bg-light shadow-sm">
                                <i class="fas fa-plus-circle"></i>
                                <input type="file" id="file" name="file[]" class="d-none" multiple accept="image/*">
                            </div>
                            <div id="image-preview" class="mt-4 d-flex flex-wrap gap-3"></div>
                        </div>

                        <!-- Submit Button -->
                        <div class="text-center mt-5">
                            <button type="submit" class="btn btn-primary btn-lg rounded shadow">Save Client</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Full-size Image Modal -->
<div class="modal fade" id="fullImageModal" tabindex="-1" aria-labelledby="fullImageModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-body">
                <img id="full-size-image" src="" alt="Full-size image">
            </div>
        </div>
    </div>
</div>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const fileInput = document.getElementById('file');
        const dropArea = document.getElementById('fileDropArea');
        const previewContainer = document.getElementById('image-preview');
        const fullSizeImageModal = new bootstrap.Modal(document.getElementById('fullImageModal'));
        const fullSizeImage = document.getElementById('full-size-image');
        const selectedFiles = []; // Array to hold selected files

        // Drag & Drop Handlers
        dropArea.addEventListener('click', () => fileInput.click());
        dropArea.addEventListener('dragover', (e) => {
            e.preventDefault();
            dropArea.classList.add('border-success', 'shadow-lg');
        });
        dropArea.addEventListener('dragleave', () => dropArea.classList.remove('border-success', 'shadow-lg'));
        dropArea.addEventListener('drop', (e) => {
            e.preventDefault();
            dropArea.classList.remove('border-success', 'shadow-lg');
            handleFiles(e.dataTransfer.files);
        });

        fileInput.addEventListener('change', () => {
            handleFiles(fileInput.files);
        });

        function handleFiles(files) {
            const fileArray = Array.from(files);

            fileArray.forEach(file => {
                if (!selectedFiles.includes(file)) {
                    selectedFiles.push(file);
                }
            });

            updatePreviews();
        }

        function updatePreviews() {
            previewContainer.innerHTML = ''; // Clear existing previews
            selectedFiles.forEach((file, index) => {
                const reader = new FileReader();
                reader.onload = function (e) {
                    const imageContainer = document.createElement('div');
                    imageContainer.classList.add('position-relative');

                    // Image preview
                    const img = document.createElement('img');
                    img.src = e.target.result;
                    img.classList.add('img-thumbnail');
                    img.onclick = () => showFullSizeImage(e.target.result);
                    img.style.cursor = 'pointer';

                    // Delete button
                    const deleteButton = document.createElement('button');
                    deleteButton.innerHTML = '&times;';
                    deleteButton.classList.add('btn', 'btn-danger', 'btn-sm', 'position-absolute');
                    deleteButton.style.top = '5px';
                    deleteButton.style.right = '5px';
                    deleteButton.style.zIndex = '10';
                    deleteButton.onclick = () => removeImage(index);

                    imageContainer.appendChild(img);
                    imageContainer.appendChild(deleteButton);
                    previewContainer.appendChild(imageContainer);
                };
                reader.readAsDataURL(file);
            });
        }

        function removeImage(index) {
            selectedFiles.splice(index, 1); // Remove file from the array
            updatePreviews(); // Refresh previews
        }

        function showFullSizeImage(src) {
            fullSizeImage.src = src;
            fullSizeImageModal.show();
        }

        // Form submission
        const form = document.getElementById('clientForm');
        form.addEventListener('submit', (e) => {
            e.preventDefault();
            const formData = new FormData(form);

            // Append selected files to FormData
            selectedFiles.forEach((file, index) => {
                formData.append(`file[${index}]`, file);
            });

            // Debugging: Log files
            for (let [key, value] of formData.entries()) {
                console.log(key, value);
            }

            // Submit the form using fetch or AJAX
            fetch(form.action, {
                method: 'POST',
                body: formData,
            })
                .then(response => response.json())
                .then(data => {
                    console.log('Form submitted successfully:', data);
                })
                .catch(error => {
                    console.error('Error submitting form:', error);
                });
        });
    });

</script>


<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
